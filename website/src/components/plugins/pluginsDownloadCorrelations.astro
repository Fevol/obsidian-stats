---
import { getDownloadReleaseCorrelationDataPoints } from '../../../../src/plugin/data';
import PluginDownloadsNameCorrelationChart from '../svelte/pluginDownloadsNameCorrelationChart.svelte';
import PluginReleaseCountDownloadsCorrelationChart from '../svelte/pluginReleaseCountDownloadsCorrelationChart.svelte';
import PluginReleaseTimeDownloadsCorrelationChart from '../svelte/pluginReleaseTimeDownloadsCorrelationChart.svelte';
import BarChart from '../svelte/genericCharts/barChart.svelte';
import { getPluginData } from '../../../../src/utils';

const downloadReleaseCorrelationDataPoints = getDownloadReleaseCorrelationDataPoints(getPluginData());

const sortedData = downloadReleaseCorrelationDataPoints.slice().sort((a, b) => a.downloads - b.downloads);

const pluginData = getPluginData();

const now = new Date();
const lastUpdateInfo = pluginData
	.map(x => {
		if (x.versionHistory.length === 0) {
			return {
				value: 0,
				label: x.id,
			};
		}

		const lastUpdate = x.versionHistory.sort((a, b) => b.initialReleaseDate.localeCompare(a.initialReleaseDate))[0];
		const date = new Date(lastUpdate.initialReleaseDate);
		const dayDiff = Math.round((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));
		return {
			value: dayDiff,
			label: x.id,
		};
	})
	.sort((a, b) => b.value - a.value);
---

<p>
	This figure shows the correlation between the number of downloads and the number of releases. This shows that plugins with more downloads tend to have more
	releases.
</p>

<div>
	<PluginReleaseCountDownloadsCorrelationChart dataPoints={downloadReleaseCorrelationDataPoints} client:only="svelte" />
</div>

<p>This figure shows the correlation between the number of downloads and the initial release time.</p>

<div>
	<PluginReleaseTimeDownloadsCorrelationChart dataPoints={downloadReleaseCorrelationDataPoints} client:only="svelte" />
</div>

<p>
	The chart below shows the correlation between the name of the plugin and the number of downloads. The regression line is calculated using the Simple Linear
	Regression algorithm. It is evident that there is a slight correlation between the placement of the plugin in the alphabet and the number of downloads.
</p>

<div>
	<PluginDownloadsNameCorrelationChart dataPoints={downloadReleaseCorrelationDataPoints} client:only="svelte" />
</div>

<p>
	This chart shows the overall distribution of downloads, it is clear that the majority of plugins have a low number of downloads, with a few plugins having a
	very high number of downloads.
</p>

<div>
	<BarChart
		dataPoints={sortedData.map((x, i) => x.downloads)}
		labels={sortedData.map(x => x.id)}
		logScale={true}
		seriesName="Download count distribution"
		calculatePrecentages={false}
		showXLabels={false}
		client:only="svelte"
	/>
</div>

<p>The following chart shows the overall distribution days since the last plugin update.</p>

<div>
	<BarChart
		dataPoints={lastUpdateInfo.map(x => x.value)}
		labels={lastUpdateInfo.map(x => x.label)}
		logScale={false}
		seriesName="Days since last update distribution"
		showXLabels={false}
		client:only="svelte"
	/>
</div>
