---
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import BarChart from "../../components/svelte/genericCharts/barChart.svelte";
import { getPluginData } from "../../../../src/utils";
import { getPluginWarningPercentByReleaseMonth } from "../../utils/base";

const pluginData = getPluginData();

const now = new Date();
const lastUpdateInfo = pluginData
	.map(x => {
		if (x.versionHistory.length === 0) {
			return {
				value: 0,
				label: x.id,
			};
		}

		const lastUpdate = x.versionHistory.sort((a, b) => b.initialReleaseDate.localeCompare(a.initialReleaseDate))[0];
		const date = new Date(lastUpdate.initialReleaseDate);
		const dayDiff = Math.round((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));
		return {
			value: dayDiff,
			label: x.id,
		};
	})
	.sort((a, b) => b.value - a.value);

const warningsByReleaseMonth = await getPluginWarningPercentByReleaseMonth(pluginData);

---

<StarlightPage
    frontmatter={{
        title: 'Plugin Updates',
        description: `Statistics on plugin updates.`
    }}
>

    <p>
        Plugin updates are important for the security and functionality of a plugin.
        Even though the Obsidian plugin API is very stable and things rarely get changed, 
        it's can still happen that a plugin no longer works as expected on a new version of Obsidian, expecially when a plugin uses undocumented parts of the API.
        Though it is worth noting that a plugin can work perfectly fine for years without any updates.
    </p>

    <p>The following chart shows the overall distribution days since the last plugin update.</p>
        
    <div>
        <BarChart
            dataPoints={lastUpdateInfo.map(x => x.value)}
            labels={lastUpdateInfo.map(x => x.label)}
            logScale={false}
            seriesName="Days since last update distribution"
            showXLabels={false}
            client:only="svelte"
        />
    </div>

    <p>Years of inactivity by release month.</p>

    <p>
        When looking at the inverse of this chart, the number of plugins that have been updated in the last 12 months, 
        no real correlation to the initial release date can be seen.
    </p>

    <div>
        <BarChart
            dataPoints={warningsByReleaseMonth.map(x => x.warningPercent['inactivity-24-months'])}
            dataPoints2={warningsByReleaseMonth.map(x => x.warningPercent['inactivity-12-months'])}
            labels={warningsByReleaseMonth.map(x => x.month)}
            logScale={false}
            stacked={true}	
            calculatePrecentages={true}
            seriesName="2 years of inactivity"
            seriesName2="1 year of inactivity"
            showXLabels={true}
            client:only="svelte"
        />
    </div>

</StarlightPage>